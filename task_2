К недостаткам теста можно отнести следующее:

1. Так как инструкции assert в обоих функциях test_func() расположены друг за другом, в случае, если в результате работы 
первой инструкции assert (assert 0 == smfunc1(0, 0) или assert 1 == smfunc2(1, 1)) будет вызвано исключение, инструкции 
assert 4 == smfunc1(2, 2) и assert 4 == smfunc2(2, 2) и инструкции assert, которые бы могли быть за ними, не будут выполнены.

Предложение: реализовать работу функций test_func() через аргументы и считывать входные значения и ожидаемый результат из файла, 
чтобы гарантировать получение результата для всего набора входных данных.

2. Вторым недостатком является одинаковое название двух функций – test_func(). При вызове функции test_func() будет вызвана последняя 
объявленная функция – в данном случае это функция, отвечающая за тестирование функции smfunc2(). 

Предложение: задать различные названия для функций test_func()

3. Недостаток, связанный с входными данными для проверки работы указанных функций: в проверках участвуют наборы входных данных, 
не из всех возможных классов эквивалентности.

Предложение: выбирать входные данные для тестирования в соответствии с возможными классами эквивалентности. 
Например, в качестве классов эквивалентности (и для функции сложения, и для функции умножения) могут рассматриваться следующие:
 	Целые положительные числа;
	Целые отрицательные числа;
	Целые отрицательные и положительные числа;
	Дробные положительные числа;
	Дробные отрицательные числа;
	Дробные отрицательные и положительные числа и т.д. 

